"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_roots_bud_sage"]("app",{

/***/ "./scripts/customMegaMenuMobile.js":
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

eval("var _home_ilie_Local_Sites_rfblegal_smartdata_app_public_wp_content_themes_rfb_legal_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _home_ilie_Local_Sites_rfblegal_smartdata_app_public_wp_content_themes_rfb_legal_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../node_modules/react-refresh/runtime.js\");\n/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(\"../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js\");\n\n__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_ilie_Local_Sites_rfblegal_smartdata_app_public_wp_content_themes_rfb_legal_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_ilie_Local_Sites_rfblegal_smartdata_app_public_wp_content_themes_rfb_legal_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_ilie_Local_Sites_rfblegal_smartdata_app_public_wp_content_themes_rfb_legal_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));\n\n// console.log(\"hello from customMegaMenu\");\nif (screen && screen.width < 800) {\n    console.log(\"code for mobile\");\n    function mobileMenuReposition() {\n        // console.log(\"mobileMenuReposition log here >>>> \");\n        const trigger = document.querySelector(\".mega-menu-toggle\");\n        const mobMenu = document.querySelector(\"#mega-menu-primary_navigation\");\n        const mobMenuCTASec = document.querySelector(\"#mobile-menu-cta-section\");\n        if (!trigger) return;\n        trigger.addEventListener(\"click\", ()=>{\n            // set the menu drawer under navbar\n            mobMenu.classList.add(\"position-under-navbar\");\n            // add CTA section in mobile drawer here >>>\n            mobMenu.appendChild(mobMenuCTASec);\n            mobMenuCTASec.classList.remove(\"hidden\");\n        });\n    }\n    function mobileMenuChildrenLevelExpansion() {\n        // first level items logic ------------------------\n        const firstLevelParents = document.querySelectorAll(\".first-level-parent\");\n        let backIconSpan = document.createElement('span');\n        backIconSpan.classList.add('custom-back-indicator');\n        backIconSpan.setAttribute('data-has-click-event', 'true');\n        backIconSpan.addEventListener('click', function(backIconEvent) {\n            backIconEvent.preventDefault();\n            let firstUL = backIconSpan.parentNode.parentNode;\n            firstUL.classList.remove(\"first-level-container-panel\", \"firstLevelSuperClass\", \"animate-fade-left\", \"animate-duration-500\");\n            document.querySelector(\"li.first-level-parent.mega-toggle-on\").classList.remove(\"mega-toggle-on\", \"menu-set-on-top\");\n        });\n        let nameDiv = document.createElement('div');\n        nameDiv.classList.add('text-black', 'p-2', 'text-xl');\n        firstLevelParents.forEach(function(firstLevelChildren) {\n            let firstLevelTrigger = firstLevelChildren.querySelector(\"span.mega-indicator\");\n            firstLevelTrigger.addEventListener('click', function(event) {\n                event.preventDefault();\n                firstLevelChildren.classList.add(\"menu-set-on-top\");\n                let firstUL = firstLevelChildren.querySelector('.mega-sub-menu');\n                if (firstUL) {\n                    firstUL.classList.add(\"first-level-container-panel\", \"firstLevelSuperClass\", \"animate-fade-left\", \"animate-duration-500\");\n                    nameDiv.textContent = firstLevelChildren.querySelector('a').textContent; // Get the text content of the <a> tag\n                    nameDiv.prepend(backIconSpan);\n                    firstUL.prepend(nameDiv);\n                } else {\n                    console.log(\"touch failed\");\n                }\n            });\n        });\n    // END first level items logic ------------------------\n    }\n    function mobileMenuChildrenSecondLevelExpansion() {\n        // second level items logic ------------------------\n        const secondLevelParents = document.querySelectorAll(\".second-level-parent\");\n        let backIconSpanSecondLevel = document.createElement('span');\n        backIconSpanSecondLevel.classList.add('custom-back-indicator', 'mb-4', 'text-base', 'font-normal', 'text-darkGrey', 'leading-6');\n        backIconSpanSecondLevel.setAttribute('data-has-click-event', 'true');\n        let nameSpanSecondLevel = document.createElement('span');\n        nameSpanSecondLevel.classList.add('text-brandBlue', 'font-semibold', 'text-2xl', 'leading-8');\n        let secondLevelSeparationBar = document.createElement('div');\n        secondLevelSeparationBar.classList.add('w-20', 'bg-accentGold', 'h-1', 'rounded-full', 'my-4');\n        backIconSpanSecondLevel.addEventListener('click', function(backIconEvent) {\n            backIconEvent.preventDefault();\n            let secondLevelParents = backIconSpanSecondLevel.parentNode.parentNode;\n            secondLevelParents.classList.remove(\"second-level-container-panel\", \"secondLevelSuperClass\", \"animate-fade-left\", \"animate-duration-500\");\n            document.querySelector(\"li.second-level-parent.mega-toggle-on\").classList.remove(\"mega-toggle-on\", \"menu-set-on-top\");\n        });\n        let nameDivSecondLevel = document.createElement('div');\n        nameDivSecondLevel.classList.add('flex', 'flex-col', 'text-black', 'p-2', 'text-xl');\n        let exploreDivSecondLevel = document.createElement('a');\n        exploreDivSecondLevel.classList.add('block', 'text-darkGrey', 'font-bold', 'uppercase', 'text-sm', 'second-level-explore-title');\n        secondLevelParents.forEach(function(secondLevelChildren) {\n            let secondLevelTrigger = secondLevelChildren.querySelector(\"span.mega-indicator\");\n            secondLevelTrigger.addEventListener('click', function(event) {\n                event.preventDefault();\n                secondLevelChildren.classList.add(\"menu-set-on-top\");\n                let secondLevelUL = secondLevelChildren.querySelector('.mega-sub-menu');\n                if (secondLevelUL) {\n                    secondLevelUL.classList.add(\"second-level-container-panel\", \"secondLevelSuperClass\", \"animate-fade-left\", \"animate-duration-500\");\n                    exploreDivSecondLevel.href = secondLevelChildren.querySelector('a').href;\n                    backIconSpanSecondLevel.textContent = \" Back\";\n                    // nameDivSecondLevel.textContent = secondLevelChildren.querySelector('a').textContent; // Get the text content of the <a> tag\n                    nameSpanSecondLevel.textContent = secondLevelChildren.querySelector('a').textContent; // Get the text content of the <a> tag\n                    exploreDivSecondLevel.textContent = \"EXPLORE\";\n                    nameDivSecondLevel.prepend(backIconSpanSecondLevel);\n                    nameDivSecondLevel.append(nameSpanSecondLevel);\n                    nameDivSecondLevel.append(secondLevelSeparationBar);\n                    nameDivSecondLevel.append(exploreDivSecondLevel);\n                    secondLevelUL.prepend(nameDivSecondLevel);\n                } else {\n                    console.log(\"touch failed on second level\");\n                }\n            });\n        });\n    // END second level items logic ------------------------\n    }\n    function mobileMenuChildrenThirdLevelExpansion() {\n        // third level items logic ------------------------\n        const thirdLevelParents = document.querySelectorAll(\".third-level-parent\");\n        let backIconSpanThirdLevel = document.createElement('span');\n        backIconSpanThirdLevel.classList.add('custom-back-indicator');\n        backIconSpanThirdLevel.setAttribute('data-has-click-event', 'true');\n        backIconSpanThirdLevel.addEventListener('click', function(backIconEvent) {\n            backIconEvent.preventDefault();\n            let thirdLevelParents = backIconSpanThirdLevel.parentNode.parentNode;\n            thirdLevelParents.classList.remove(\"third-level-container-panel\", \"thirdLevelSuperClass\", \"animate-fade-left\", \"animate-duration-500\");\n            document.querySelector(\"li.third-level-parent.mega-toggle-on\").classList.remove(\"mega-toggle-on\", \"menu-set-on-top\");\n            let parentLiRow = backIconSpanThirdLevel.closest(\".mega-menu-row.menu-set-on-top\");\n            // console.log(parentLiRow);\n            parentLiRow.classList.remove(\"menu-set-on-top\");\n        });\n        let nameDivThirdLevel = document.createElement('div');\n        nameDivThirdLevel.classList.add('text-black', 'p-2', 'text-xl');\n        let exploreDivThirdLevel = document.createElement('a');\n        exploreDivThirdLevel.classList.add('block', 'text-black', 'p-2', 'text-sm', 'ml-8', 'third-level-explore-title');\n        thirdLevelParents.forEach(function(thirdLevelChildren) {\n            let thirdLevelTrigger = thirdLevelChildren.querySelector(\"span.mega-indicator\");\n            // let parentLiRow = thirdLevelChildren.parentNode.parentNode.parentNode.parentNode;\n            let parentLiRow = thirdLevelChildren.closest(\".mega-menu-row\");\n            // console.log(parentLiRow);\n            thirdLevelTrigger.addEventListener('click', function(event) {\n                event.preventDefault();\n                parentLiRow.classList.add(\"menu-set-on-top\");\n                thirdLevelChildren.classList.add(\"menu-set-on-top\");\n                let thirdLevelUL = thirdLevelChildren.querySelector('.mega-sub-menu');\n                if (thirdLevelUL) {\n                    thirdLevelUL.classList.add(\"third-level-container-panel\", \"thirdLevelSuperClass\", \"animate-fade-left\", \"animate-duration-500\");\n                    exploreDivThirdLevel.href = thirdLevelChildren.querySelector('a').href;\n                    nameDivThirdLevel.textContent = thirdLevelChildren.querySelector('a').textContent; // Get the text content of the <a> tag\n                    exploreDivThirdLevel.textContent = \"EXPLORE\";\n                    nameDivThirdLevel.prepend(backIconSpanThirdLevel);\n                    nameDivThirdLevel.append(exploreDivThirdLevel);\n                    thirdLevelUL.prepend(nameDivThirdLevel);\n                } else {\n                    console.log(\"touch failed on third level\");\n                }\n            });\n        });\n    // END third level items logic ------------------------\n    }\n    window.addEventListener(\"DOMContentLoaded\", ()=>{\n        mobileMenuReposition();\n        mobileMenuChildrenLevelExpansion();\n        mobileMenuChildrenSecondLevelExpansion();\n        mobileMenuChildrenThirdLevelExpansion();\n    });\n}\n\n\nvar $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;\nvar $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(\n\t$ReactRefreshModuleId$\n);\n\nfunction $ReactRefreshModuleRuntime$(exports) {\n\tif (true) {\n\t\tvar errorOverlay;\n\t\tif (true) {\n\t\t\terrorOverlay = false;\n\t\t}\n\t\tvar testMode;\n\t\tif (typeof __react_refresh_test__ !== 'undefined') {\n\t\t\ttestMode = __react_refresh_test__;\n\t\t}\n\t\treturn __react_refresh_utils__.executeRuntime(\n\t\t\texports,\n\t\t\t$ReactRefreshModuleId$,\n\t\t\t__webpack_module__.hot,\n\t\t\terrorOverlay,\n\t\t\ttestMode\n\t\t);\n\t}\n}\n\nif (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {\n\t$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);\n} else {\n\t$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);\n}\n\n//# sourceURL=webpack://@roots/bud/sage/./scripts/customMegaMenuMobile.js?");

/***/ })

});